@model AuditReport.Models.Project

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-10">
        <!-- Basic layout-->
        <div class="panel panel-flat">
            <div class="panel-heading">
                <h5 class="panel-title"><i class="icon-stack-plus position-left"></i> Create Project</h5><hr />
                <div class="heading-elements">
                    <ul class="icons-list">
                        <li><a data-action="collapse"></a></li>
                    </ul>
                </div>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm())
                {
                   

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required="required" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ClientId, "Client", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ClientId", null, "--Select--", htmlAttributes: new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProjectGroupId, "Project Group", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ProjectGroupId", null, "--Select--", htmlAttributes: new { @class = "form-control"})
                                @Html.ValidationMessageFor(model => model.ProjectGroupId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>


                       
                    </div>



    <div class="row">
        <div >
            <!-- Basic layout-->
            <div class="panel panel-flat">
                <div class="panel-heading">
                    <h5 class="panel-title"><i class="icon-stack-plus position-left"></i> Add Project Staff</h5><hr />
                    <div class="heading-elements">
                        <ul class="icons-list">
                            <li><a data-action="collapse"></a></li>
                        </ul>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="form-inline">
                        <div class="form-group">
                            <label class="sr-only"></label>
                            <p class="form-control-static">Staff Name</p>
                        </div>
                        <div class="form-group">
                            @Html.DropDownList("RName", null,"--Select--", new { @id = "RName", @class = "form-control", @style = "width:400px;" })
                            @Html.ValidationMessage("RName", "", new { @class = "text-danger" })
                        </div>
                        <button type="button" class="btn btn-primary add-Resource">Add Staff</button>
                    </div>
                    <br />
                    <table class="Resource-list table table-bordered">
                        <tr class="bg-blue"><th>Staff Name</th><th>Staff Position</th><th></th></tr>
                    </table>
                </div>
            </div>
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-offset-5 col-md-10">
            <button type="button" id="SaveProject" class="btn btn-primary"><i class="icon-add position-left"></i>  Save</button>
        </div>
    </div>
                }

            </div>
        </div>
    </div>
</div>





<script>
    var counter = 0;
    jQuery('.add-Resource').click(function (event) {

        event.preventDefault();
        counter++;

        var ResourceId = $('#RName').val();

        $.ajax({
            contentType: 'application/json; charset=utf-8',
            type: "get",
            dataType: "json",
            data: { id: ResourceId },
            url: "/Projects/GetResources",
            success: function (result) {

                var newRow = jQuery('<tr><td> <input value="' + result.Id + '" readonly="true" type="hidden" name="ResourceId"/> <input class="form-control" value="' + result.Name + '" readonly="true" type="text" name="ResourceName' +
                   counter + '"/></td><td><input class="form-control" value="' + result.Position + '"  readonly="true" type="text" name="ResourcePosition' +
                   counter + '"/></td> <td> <input type="button" class="btn btn-danger btn-xs" value="Delete" onclick="$(this).parent().parent().remove();" /></td></tr>');
                
                jQuery('table.Resource-list').append(newRow);

            }
        });

    });


    $('#SaveProject').click(function (e) {
        
        if ($.trim($('#Name').val()) === "") {
            alert('Project name required');
            $('#Name').focus();
        }        
        else {
            CreateProject();
        }

    });


    function CreateProject()
    {
        var ClientId = document.getElementById("ClientId");
        var EndDate = document.getElementById("EndDate");
        var Name = document.getElementById("Name");
        var ProjectGroupId = document.getElementById("ProjectGroupId");
        var Remarks = document.getElementById("Remarks");
        var StartDate = document.getElementById("StartDate");
        var Status = document.getElementById("Status");
        var ResourceId = document.getElementsByName("ResourceId");

        var ResourceDetails = [];

        for (var i = 0; i < ResourceId.length; i++)
        {
            ResourceDetails.push({ Id: ResourceId[i].value });
        }

        ResourceDetails = JSON.stringify({ 'ResourceDetails': ResourceDetails, 'ClientId': ClientId.value, 'EndDate': EndDate.value, 'Name': Name.value, 'ProjectGroupId': ProjectGroupId.value, 'Remarks': Remarks.value, 'StartDate': StartDate.value ,'Status':Status.value});

        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '/Projects/ProjectCreate',
            data: ResourceDetails, 
            success: function (result) {
                console.log(result);
                if (result.flag)
                {                 
                    window.location = "/Projects/Index";
                    alert("Record save successfully!");
                }
                else
                {
                    alert(result.message)
                }
               
            },
            failure: function (response) {
                alert('Error');
            }
        });


    };
</script>

<p><button type="button" class="btn btn-warning btn-sm" onclick="window.location.href='@Url.Action("Index")';"><i class="icon-circle-left2 position-left"></i> Go back</button></p>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
