
@using AuditReport.Helper

@model IEnumerable<AuditReport.ViewModel.VMPlanTaskStatusFull>
@{

      ViewBag.Title = "ProjectSitePlanTaskInfoExisting";
      Layout = "~/Views/Shared/_Layout.cshtml";

    var counter = 1;
    AuditReport.Models.EPARSDbContext db = new AuditReport.Models.EPARSDbContext();

}

@helper GetSepString(int cnt)
{
var strSep = "";

for (var i = 0; i < cnt; i++)
{
    strSep = strSep + "--> ";
}

    @strSep
}


<style>
    /*input[type="text"] {
        border-top: 0;
        border-right: 0;
        border-left: 0;
        border-color: #e2e2e2;
        border-width: thin;
        -webkit-box-shadow: none;
        box-shadow: none;
    }*/

    
</style>


@if (ViewBag.PlanActive == false)
{
    <div class="alert alert-warning">
        <strong>Inactive Plan !</strong> You cannot set status for inactive plan.
    </div>
}
<div class="alert alert-primary text-center">
    <div class="well well-sm">
        <h5>Project Name: @ViewBag.ProjectName</h5>
        <h6>Site Name: @ViewBag.ProjectSiteName</h6>
    </div>



    <h4>Project Status</h4>
   
   
    <div class="form-inline">
        @if (ViewBag.PlanActive == true && ViewBag.flagApproval == false)
        {
            <input type="button" class="btn btn-xs btn-warning" value="Authorize" id="authState" />

        }
        <div class="form-group">
            <label class="text-bold">Plan Date</label>
            <div class="form-control-static">@ViewBag.PlanDate</div>
            @*@Html.TextBox("PlanDate", null, new { @disabled = "disabled", @class = "form-control" })*@
        </div>
        <div class="form-group">
            <label class="text-bold">Plan Code</label>
            <div class="form-control-static">@ViewBag.PlanCode</div>
            @*@Html.TextBox("PlanCode", null, new { @disabled = "disabled", @style = "width:80px;", @class = "form-control" })*@
        </div>

        <div class="form-group">
            <label class="text-bold">Status Date</label>
            <div class="form-control-static">@ViewBag.SiteStatusDate</div>
            @*@Html.TextBox("SiteStatusDate", null, new { @disabled = "disabled", @class = "form-control" })*@
            @Html.Hidden("SiteStatusDate")
        </div>
        <div class="form-group">
            <label class="text-bold">Last Edited by:</label>
            <div class="form-control-static">@(ViewBag.EditedBy) &nbsp;</div>
        </div>
        @if (ViewBag.PlanActive == true)
        {
            <input type="button" class="btn btn-xs btn-success" value="Save" id="saveState" />
        }

        


        @*<input type="button" class="btn btn-xs btn-primary" value="Save" id="saveState" />*@
        @*@Html.Hidden("ProjectId")
        @Html.Hidden("SiteId")*@
    </div>
</div>
<div class="table-responsive">
    <table class="table table-bordered table-xxs StatusTable" id="TaskTable">
        @*<tr>
            <td>Plan Date</td>
            <td>@Html.TextBox("PlanDate", null, new { @disabled = "disabled" })</td>
            <td>Plan Code</td>
            <td>@Html.TextBox("PlanCode", null, new { @disabled = "disabled", @style = "width:80px;" })</td>
            <td colspan="3">

                @Html.Hidden("ProjectId")
                @Html.Hidden("SiteId")
            </td>
            <td>Status Date</td>
            <td>@Html.TextBox("SiteStatusDate", null, new { @disabled = "disabled" })</td>
        </tr>*@
        <thead>
        <tr class="bg-blue">
            <th>Id</th>
            <th style="min-width:300px;">Task Name</th>
            <th>WBS</th>
            @*<th>Start Date (Planned)</th>
            <th>End Date (Planned)</th>*@            
            <th>Start Date</th>
            @*<th style="min-width:120px;">Prev Tentative End Date</th>*@
            <th>Tentative End Date</th>
            <th>Deviation</th>
            @*<th>Prev(%) Comp</th>*@
            <th>Perc(%) Comp</th>
            @*<th style="min-width:200px;">Previous Status</th>*@
            <th>Present Status</th>
            <th>Actual Completion Dt</th>            
            <th>Reason for Deviation</th>
            <th>Remarks</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            //var TaskName = db.ProjectTask.Where(x => x.Id == item.ProjectTaskId).Select(y => y.Name).FirstOrDefault();
            //var prevdate = db.ProjectSiteStatus.TakeWhile(x => x.SiteStatusDate != item.SiteStatusDate).LastOrDefault();
            //var prevdata = db.ProjectSiteStatus.Where(x => x.SiteStatusDate == prevdate.SiteStatusDate).Select(y => y.PresentStatus).FirstOrDefault();
            //var AcctualCompressionDate = item.CompletionDate; 
            <tr>
                <td>@counter @Html.Hidden("PlanTaskId", @item.PlanTaskId, new { @name = "PlanTaskId" })@Html.Hidden("PlanTaskStatusId", @item.PlanTaskStatusId, new { @name = "PlanTaskStatusId" })@Html.Hidden("ConId", @item.ConId, new { @name = "ConId" })</td>
                @if (item.MileStone == "Y")
                {
                    <td style="color:green;font-weight:bold;">@GetSepString(item.IndLevel) @item.Name</td>
                }
                else
                {
                    <td style="font-weight:bold;">@GetSepString(item.IndLevel) @item.Name</td>
                }
                
                <td>@item.WBS</td>
                @*<td>@item.PlanStartDate.Value.ToShortDateString()</td>
                <td>@item.PlanEndDate.Value.ToShortDateString() </td>*@               

                @*<td>@NullHelper.DateToString(item.StartDate)</td>
                <td>@NullHelper.DateToString(item.EndDate)</td>
                <td>@item.PerComp </td>
                <td>@item.PresentStatus </td>
                <td>@NullHelper.DateToString(item.CompletionDate)</td>
                <td>@item.Deviation</td>
                <td>@item.ResDeviation</td>
                <td>@item.Remarks</td>*@

                <td>@Html.TextBox("StartDate", NullHelper.DateToString(item.StartDate), new { @name = "StartDate", @style = "width:90px;", @class = "form-control datepicker" })</td>
                @*<td>@NullHelper.DateToString(item.PrevEndDate)</td>*@
                <td>@Html.TextBox("EndDate", NullHelper.DateToString(item.EndDate), new { @name = "EndDate", @style = "width:90px;", @class = "form-control datepicker" })@Html.Hidden("PrevEndDate", NullHelper.DateToString(@item.PrevEndDate), new { @name = "PrevEndDate" })</td>
                <td>@Html.TextBox("Deviation", item.Deviation, new { @name = "Deviation", @style = "width:50px;", @class = "form-control", @readonly="readonly" })</td>
                @*<td>@item.PrevPerComp</td>*@
                <td>@Html.TextBox("PerComp", item.PerComp, new { @style = "width:50px;", @name = "PerComp", @class = "form-control" })</td>
                @*<td>@item.PrevStatus</td>*@
                <td>@Html.TextArea("PresentStatus", item.PresentStatus, 2, 17, new { @name = "PresentStatus", @style = "width:150px;", @class = "form-control" })</td>
                <td>@Html.TextBox("CompletionDate", NullHelper.DateToString(item.CompletionDate), new { @name = "CompletionDate", @style = "width:90px;", @class = "form-control datepicker" })</td>                
                <td>@Html.TextArea("ResDeviation", item.ResDeviation, 2, 17, new { @name = "ResDeviation", @class = "form-control", @style = "width:150px;" })</td>
                <td>@Html.TextArea("Remarks", item.Remarks, 2, 17, new { @name = "Remarks", @class = "form-control", @style = "width:150px;" })</td>
            </tr>
            counter++;
        }
            </tbody>

    </table>
</div>

<p><button type="button" class="btn btn-warning btn-sm" onclick="window.location.href='@Url.Action("statusList", new { PId=ViewBag.PId })';"><i class="icon-circle-left2 position-left"></i> Go back</button></p>


@if (ViewBag.PlanActive == true)
{

<script>
    $('#saveState').click(function (e) {
        //alert('start');
        //var PlanCode = $('#PlanCode').val();
        //var PlanDate = $('#PlanDate').val();
        //var ProjectId = $('#ProjectId').val();
        //var SiteId = $('#SiteId').val();
        var StatusDate = '@ViewBag.SiteStatusDate';
        //alert(StatusDate);

        var PlanTaskId = document.getElementsByName("PlanTaskId");
        var PlanTaskStatusId = document.getElementsByName("PlanTaskStatusId");
        var StatusStartDate = document.getElementsByName("StartDate");
        var StatusEndDate = document.getElementsByName("EndDate");
        var Remarks = document.getElementsByName("Remarks");
        var PerComp = document.getElementsByName("PerComp");
        var PresentStatus = document.getElementsByName("PresentStatus");
        var Deviation = document.getElementsByName("Deviation");
        var ResDeviation = document.getElementsByName("ResDeviation");
        var CompletionDate = document.getElementsByName("CompletionDate");
        var ConId = document.getElementsByName("ConId");
        //alert('input record fetch complete');

        var Tasks = [];

        for (var i = 0; i < PlanTaskId.length; i++) {

            Tasks.push({ TaskId: 0, PlanTaskId: PlanTaskId[i].value, StartDate: StatusStartDate[i].value, EndDate: StatusEndDate[i].value, Remarks: Remarks[i].value, PerComp: PerComp[i].value, PresentStatus: PresentStatus[i].value, Deviation: Deviation[i].value, ResDeviation: ResDeviation[i].value, CompletionDate: CompletionDate[i].value, PlanTaskStatusId: PlanTaskStatusId[i].value, ConId: ConId[i].value });

        }
        console.log(Tasks);
        TaskDetails = JSON.stringify({ TaskDetails: Tasks, StatusDate: StatusDate });
        //alert("all data set");
        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '/ProjectSitePlanTasks/SavePlanTaskStatus',
            data: TaskDetails,
            success: function (result) {
                console.log(result);
                if (result.flag==true) {
                    alert("Record save successfully!");
                    //ProjectSitePlanTasks/statusList?PId=5
                    window.location = "/ProjectSitePlanTasks/statusList?PId=@ViewBag.PId";
                }
                else {
                    alert(result.message);
                }

            },
            failure: function (response) {
                alert('Error occured');
            }
        });

    });


    $('#authState').click(function (e) {

        $.ajax({
            url: "/ProjectSitePlanTasks/AuthorizeStatus",
            type: "post",
            data: {
                PId: @ViewBag.PId, SiteStatusDate: '@ViewBag.SiteStatusDate'
            },
            dataType: "json",

            success: function (flag) {
                console.log(flag);

                if (flag.flag == true) {

                    alert("Successfully Authorized !");
                    location.reload(true);
                }
                else {
                    alert(flag.message);
                }

            },

            error: function (xhr) {
                console.log(xhr)
                alert('error');

            }


        });

    });

    function PopulateDeviation() {

        @*var fromDate = '@ViewBag.SiteStatusDate';
        var from = moment(fromDate, "DD/MM/YYYY", true);*@
        //var to = from;


        //alert($('#TaskTable tr').length);
        //return;
        for (var cn2 = 1; cn2 < $('#TaskTable tr').length; cn2++) //
        {
            //alert($('#TaskTable tr').eq(cn2).find("td input[name=StatusEndDate]").val());

            var fromDate = $('#TaskTable tr').eq(cn2).find("td input[name=PrevEndDate]").val();
            var from = moment(fromDate, "DD/MM/YYYY", true);

            if ($('#TaskTable tr').eq(cn2).find("td input[name=EndDate]").val() != "") {
                if (from.isValid() == true) {
                    toDate = moment($('#TaskTable tr').eq(cn2).find("td input[name=EndDate]").val(), 'DD/MM/YYYY');
                    duration = toDate.diff(from, 'days');
                    $('#TaskTable tr').eq(cn2).find("td input[name=Deviation]").val(duration);
                    //if (duration < 0) {
                    //    $('#TaskTable tr').eq(cn2).addClass("bg-danger-300");
                    //}
                    //else {
                    //    $('#TaskTable tr').eq(cn2).removeClass("bg-danger-300");
                    //}

                }
                else {

                    $('#TaskTable tr').eq(cn2).find("td input[name=Deviation]").val('');
                    //$('#TaskTable tr').eq(cn2).removeClass("bg-danger-300");
                }


                //alert($('#TaskTable tr').eq(cn2).find("td input[name=StatusEndDate]").val());
            }
            else {
                //alert("op 2");
                $('#TaskTable tr').eq(cn2).find("td input[name=Deviation]").val('');
            }


        }
    }



    function PopulateAlert() {

        var fromDate = '@ViewBag.SiteStatusDate';
        var from = moment(fromDate, "DD/MM/YYYY", true);
        //var to = from;


        //alert($('#TaskTable tr').length);
        //return;
        for (var cn2 = 1; cn2 < $('#TaskTable tr').length; cn2++) //
        {
            //alert($('#TaskTable tr').eq(cn2).find("td input[name=StatusEndDate]").val());

            if ($('#TaskTable tr').eq(cn2).find("td input[name=EndDate]").val() != "") {
                if (from.isValid() == true) {
                    toDate = moment($('#TaskTable tr').eq(cn2).find("td input[name=EndDate]").val(), 'DD/MM/YYYY');
                    duration = toDate.diff(from, 'days');
                    //$('#TaskTable tr').eq(cn2).find("td input[name=Deviation]").val(duration);
                    if (duration < 0) {
                        $('#TaskTable tr').eq(cn2).addClass("bg-danger-300");
                    }
                    else {
                        $('#TaskTable tr').eq(cn2).removeClass("bg-danger-300");
                    }

                }
                else {

                    //$('#TaskTable tr').eq(cn2).find("td input[name=Deviation]").val('');
                    $('#TaskTable tr').eq(cn2).removeClass("bg-danger-300");
                }


                //alert($('#TaskTable tr').eq(cn2).find("td input[name=StatusEndDate]").val());
            }
            else {
                //alert("op 2");
                //$('#TaskTable tr').eq(cn2).find("td input[name=Deviation]").val('');
                $('#TaskTable tr').eq(cn2).removeClass("bg-danger-300");
            }


        }
    }


    PopulateDeviation();

    $(document).on({
        'focus': function () {
            // something
        },
        'change': function () {
            var PerVal = $(this).val();
            // Get the current row
            var row = $(this).closest('tr');
            if (PerVal.length != 0) {

                if ($.isNumeric(PerVal) == true) {
                    if (parseInt(PerVal) == 100) {
                        if (row.find('input[name=CompletionDate]').val().length == 0) {
                            row.find('input[name=CompletionDate]').val('@ViewBag.SiteStatusDate');
                            new PNotify({
                                title: 'Task Complete Notice',
                                text: 'Completion date set to status date:<b>@ViewBag.SiteStatusDate</b>'
                            });
                        }
                    }
                    else if (parseInt(PerVal) < 0 || parseInt(PerVal) > 100) {
                        $(this).val('');
                        alert('Only numeric (0-100) or leave empty');
                    }
                }
                else {
                    $(this).val('');
                    alert('Only numeric (0-100) or leave empty');
                }
            }
        }
    }, 'input[name=PerComp]');



</script>

}


@section Scripts {
    <script>

        $("input[name=EndDate]").datepicker({
            format: 'dd/mm/yyyy',
            todayHighlight: true,
            todayBtn: true,
            autoclose: true,
            onSelect: function (e) {
                PopulateDeviation();
                PopulateAlert();
            }
        }).on("input change paste", function () {
            PopulateDeviation();
            PopulateAlert();
        });


    </script>
}