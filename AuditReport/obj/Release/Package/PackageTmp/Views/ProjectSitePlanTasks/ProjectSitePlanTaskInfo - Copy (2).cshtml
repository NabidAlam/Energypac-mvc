@using AuditReport.Helper
@*@model IEnumerable<AuditReport.Models.ProjectSitePlanTask>*@
@model IEnumerable<AuditReport.ViewModel.VMPlanTaskDisp>
@{
    ViewBag.Title = "ProjectSitePlanTaskInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var counter = 1;
    AuditReport.Models.EPARSDbContext db = new AuditReport.Models.EPARSDbContext();
}

@helper GetSepString(int cnt)
{
    var strSep = "";

    for (var i = 0; i < cnt ; i++) {
        strSep = strSep + "--> ";
    }

    @strSep
}

<style>
    input[type="text"] {
     border-top: 0;
     border-right: 0;
     border-left: 0;
     border-color:#e2e2e2;
     border-width:thin;
     -webkit-box-shadow: none;
     box-shadow: none;
}
</style>


    <div class="alert alert-primary text-center">
        <div class="well well-sm">
            <h5>Project Name: @ViewBag.ProjectName </h5>
            <h6>Site Name: @ViewBag.ProjectSiteName </h6>
            @*<h5>Project Name: @Model.Where(x => x.ProjectId == Convert.ToInt32(Request["ProjectId"].ToString())).Select(y => y.Project.Name).FirstOrDefault()</h5>
            <h6>Site Name: @Model.Where(x => x.ProjectSiteId == Convert.ToInt32(Request["SiteId"].ToString())).Select(y => y.ProjectSite.Name).FirstOrDefault()</h6>*@
        </div>
        <h4>Project Status</h4>
        <div class="form-inline">
            <div class="form-group">
                <label class="text-bold">Plan Date: </label>
                <div class="form-control-static">@ViewBag.PlanDate</div>                
            </div>
            <div class="form-group">
                <label class="text-bold">Plan Code: </label>
                <div class="form-control-static">@ViewBag.PlanCode</div>
            </div>

            <div class="form-group">
                <label class="text-bold">Status Date</label>
                @Html.TextBox("StatusDate", null, new { @class = "form-control datepicker" })
            </div>
            <input type="button" class="btn btn-xs btn-success" value="Save" id="saveState" />
            @Html.Hidden("ProjectId")
            @Html.Hidden("SiteId")
        </div>
    </div>



<div class="table-responsive">
    <table class="table table-bordered table-xxs StatusTable">
        @*<tr>
            <td>Plan Date</td>
            <td>@Html.TextBox("PlanDate", null, new { @disabled="disabled"})</td>
            <td>Plan Code</td>
            <td>@Html.TextBox("PlanCode", null, new { @disabled = "disabled", @style = "width:80px;" })</td>
            <td colspan="3">
                <input type="button" class="btn-primary" value="Save" id="saveState" />
                @Html.Hidden("ProjectId")
                @Html.Hidden("SiteId")
            </td>
            <td>Status Date</td>
            <td>@Html.TextBox("StatusDate", null)</td>
        </tr>*@
        <tr class="bg-blue">
            <th>Id</th>
            <th style="min-width:300px;">Task Name</th>
            <th>WBS</th>
            <th>Start Date (Planned)</th>
            <th>End Date (Planned)</th>
            <th>Previous Status</th>
            <th>Start Date</th>
            <th>Tentative End Date</th>
            <th>Perc(%) Comp</th>
            <th>Present Status</th>
            <th>Actual Completion Dt</th>
            <th>Deviation</th>
            <th>Reason for Deviation</th>
            <th>Remarks</th>
        </tr>
@foreach (var item in Model)
{
    //var TaskName = db.ProjectTask.Where(x => x.Id == item.ProjectTaskId).Select(y => y.Name).FirstOrDefault();
    
    <tr>
        <td>@counter</td>
        @if (item.MileStone != null)
        {
            @*if (item.ConId != 0)
            {
                <td style="color:green;"><p style="margin-left:20px;">@item.Name </p> @Html.Hidden("TID", @item.TaskId, new { @name = "TID" })</td>
            }
            else
            {
                <td style="color:green;font-weight:bold;">@item.Name @Html.Hidden("TID", @item.TaskId, new { @name = "TID" })</td>
            }*@
            <td style="color:green;font-weight:bold;">@GetSepString(item.IndLevel) @item.Name @Html.Hidden("TID", @item.TaskId, new { @name = "TID" }) @Html.Hidden("PlanTaskId", @item.PlanTaskId, new { @name = "PlanTaskId" })</td>

        }
        else
        {
            @*if (item.ConId != 0)
            {
                <td> <p style="margin-left:20px;">@item.Name  </p> @Html.Hidden("TID", @item.TaskId , new { @name = "TID" })</td>
            }
            else
            {
                <td style="font-weight:bold;">@item.Name @Html.Hidden("TID", @item.TaskId , new { @name = "TID" })</td>
            }*@
            <td style="font-weight:bold;">@GetSepString(item.IndLevel)  @item.Name @Html.Hidden("TID", @item.TaskId, new { @name = "TID" }) @Html.Hidden("PlanTaskId", @item.PlanTaskId, new { @name = "PlanTaskId" })</td>
        }
        
        <td>@item.WBS @Html.Hidden("WBS", @item.WBS, new { @name = "WBS" })</td>
        <td>@NullHelper.DateToString(item.StartDate) @Html.Hidden("StartDate", NullHelper.DateToString(item.StartDate), new { @name = "StartDate" })</td>
        <td>@NullHelper.DateToString(item.EndDate) @Html.Hidden("EndDate", @NullHelper.DateToString(item.EndDate), new { @name = "EndDate" })</td>
        <td>@Html.Hidden("PrevStatus")</td>
        <td>@Html.TextBox("StatusStartDate", null, new { @name = "StatusStartDate", @style = "width:90px;", @class= "datepicker" })</td>
        <td>@Html.TextBox("StatusEndDate", null, new { @name = "StatusEndDate", @style = "width:90px;", @class = "datepicker" })</td>
        <td>@Html.TextBox("PerComp", null, new { @style = "width:30px;", @name = "PerComp" })</td>
        <td>@Html.TextBox("PresentStatus", null, new { @name = "PresentStatus", @style = "width:400px;" })</td>
        <td>@Html.TextBox("CompletionDate", null, new { @name = "CompletionDate", @style = "width:90px;", @class = "datepicker" })</td>
        <td>@Html.TextBox("Deviation", null, new { @name = "Deviation", @style = "width:50px;" })</td>
        <td>@Html.TextBox("ResDeviation", null, new { @name = "ResDeviation" })</td>
        <td>@Html.TextBox("Remarks", null, new { @name = "Remarks" })</td>
    </tr>
    counter++;
}
     
    </table>
</div>





<p><button type="button" class="btn btn-warning btn-sm" onclick="window.location.href='@Url.Action("Index")';"><i class="icon-circle-left2 position-left"></i> Go back</button></p>





<script>
    //



    $('#saveState').click(function (e) {
        //alert('start');
        //var PlanCode = $('#PlanCode').val();
        //var PlanDate = $('#PlanDate').val();
        //var ProjectId = $('#ProjectId').val();
        //var SiteId = $('#SiteId').val();
        var StatusDate = $('#StatusDate').val();


        var PlanTaskId = document.getElementsByName("PlanTaskId");
        //var WBS = document.getElementsByName("WBS");
        var StatusStartDate = document.getElementsByName("StatusStartDate");
        var StatusEndDate = document.getElementsByName("StatusEndDate");
        var Remarks = document.getElementsByName("Remarks");
        var PerComp = document.getElementsByName("PerComp");
        var PresentStatus = document.getElementsByName("PresentStatus");
        var Deviation = document.getElementsByName("Deviation");
        var ResDeviation = document.getElementsByName("ResDeviation");
        var CompletionDate = document.getElementsByName("CompletionDate");
        //alert('input record fetch complete');
        
        var Tasks = [];

        for (var i = 0; i < PlanTaskId.length; i++) {

            Tasks.push({ TaskId: 0, PlanTaskId: PlanTaskId[i].value, StartDate: StatusStartDate[i].value, EndDate: StatusEndDate[i].value, Remarks: Remarks[i].value, PerComp: PerComp[i].value, PresentStatus: PresentStatus[i].value, Deviation: Deviation[i].value, ResDeviation: ResDeviation[i].value, CompletionDate: CompletionDate[i].value });

        }
        console.log(Tasks);
        TaskDetails = JSON.stringify({ TaskDetails: Tasks, StatusDate: StatusDate });

        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '/ProjectSitePlanTasks/SavePlanTaskStatus',
            data: TaskDetails,
            success: function (result) {
                console.log(result);
                if (result) {
                    alert("Record save successfully!");
                }
                else {
                    alert("Record failed to save !");
                }

            },
            failure: function (response) {
                alert('Error occured');
            }
        });

    });

    
</script>